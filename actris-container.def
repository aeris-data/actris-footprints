BootStrap: docker
From: ubuntu:20.04

%files
    ./flexpart_makefile /usr/local/makefile
    ./common /usr/local/footprints/
    ./xarray_extras /usr/local/footprints/
    ./fpout /usr/local/footprints/

%environment
    export LANG=C.UTF-8
    export LC_ALL=C.UTF-8
    export PATH=/opt/mamba/bin:$PATH
    export LD_LIBRARY_PATH=/usr/local/eccodes/lib:$LD_LIBRARY_PATH
    . /etc/bash.bashrc

%post
    apt-get update -y && apt-get upgrade -y && apt-get install -y software-properties-common && DEBIAN_FRONTEND="noninteractive" TZ="Europe" apt-get install -y tzdata
    apt-get -q -y install build-essential git cmake software-properties-common wget g++ gfortran autoconf libtool automake flex bison curl \
        libbz2-dev libssl-dev libreadline-dev libsqlite3-dev tk-dev ruby libnetcdf-dev libnetcdff-dev libeccodes-dev nano wget python3-virtualenv && \
    apt-get -q clean && \
    rm -rf /var/lib/apt/lists/*
    ulimit -s unlimited
    alias ll='ls --color=auto -alF' >> /etc/bash.bashrc

    # Install micromamba
    "${SHELL}" <(curl -L micro.mamba.pm/install.sh) 
    # check how to install without interactive truc
    eval "$(micromamba shell hook --shell bash)"
    micromamba activate

    micromamba create -y -n actris_env numpy scipy eccodes hdf5 netCDF4 matplotlib cartopy pandas xarray

    # # Install eccodes
    mkdir -p /usr/local
    cd /usr/local
    wget https://confluence.ecmwf.int/download/attachments/45757960/eccodes-2.32.1-Source.tar.gz?api=v2
    tar -xzf "eccodes-2.32.1-Source.tar.gz?api=v2"
    mkdir build
    cd build
    cmake -DCMAKE_INSTALL_PREFIX=/usr/local/eccodes -DBUILD_SHARED_LIBS=BOTH ../eccodes-2.32.1-Source
    make
    ctest
    make install
    rm "/usr/local/eccodes-2.32.1-Source.tar.gz?api=v2"
    rm -r /usr/local/eccodes-2.32.1-Source
    micromamba activate actris_env
    pip install eccodes
    python3 -m eccodes selfcheck

    # # Install FLEXPART
    cd /usr/local
    wget https://www.flexpart.eu/downloads/66
    tar xvf 66
    cd /usr/local/flexpart_v10.4_3d7eebf/src
    sed -i "s/if(isec1(6).eq.129) then/if((isec1(6).eq.129).and.(k.eq.0)) then/" gridcheck_ecmwf.f90
    sed -i "s/if(isec1(6).eq.129) then/if((isec1(6).eq.129).and.(k.eq.0)) then/" gridcheck_nests.f90
    sed -i "s/if(isec1(6).eq.129) oro(i,j)= \&\!\! ECMWF OROGRAPHY/if((isec1(6).eq.129).and.(k.eq.0)) oro(i,j)= \&\!\! ECMWF OROGRAPHY/" readwind_ecmwf.f90
    sed -i "s/if(isec1(6).eq.129) oro(i,j)= \&\!\! ECMWF OROGRAPHY/if((isec1(6).eq.129).and.(k.eq.0)) oro(i,j)= \&\!\! ECMWF OROGRAPHY/" readwind_ecmwf_mpi.f90
    sed -i "s/if(isec1(6).eq.129) oro(i,j)= \&\!\! ECMWF OROGRAPHY/if((isec1(6).eq.129).and.(k.eq.0)) oro(i,j)= \&\!\! ECMWF OROGRAPHY/" readwind_emos.f90
    sed -i "s/if(isec1(6).eq.129) oron(i,j,l)= \&\!\! ECMWF OROGRAPHY/if((isec1(6).eq.129).and.(k.eq.0)) oron(i,j,l)= \&\!\! ECMWF OROGRAPHY/" readwind_nests.f90
    cp /usr/local/makefile ./
    make ncf=yes

    micromamba create -y -n footprints_env xarray pandas numpy zarr netCDF4 h5py scipy h5netcdf dask

    micromamba create -y -n softio_env pandas xarray numpy tqdm scipy hvplot dask toolz holoviews geoviews cartopy netCDF4 h5py
    cd /usr/local
    git clone https://github.com/iagos-dc/soft-io.git
    cd /usr/local/soft-io
    micromamba activate softio_env
    pip install -e .
    
%runscript
    eval "$(micromamba shell hook --shell bash)"
    micromamba activate
